---
title: "new_data_counts"
format: pdf
---

### Loading the data

```{r}
new_events <- read_csv("2025_02_18_utilization_events.csv")
new_report <- read_csv("2025_02_18_utilization_report.csv")
```

```{r}
colnames(new_events)
```

```{r}
colnames(new_report)
```

```{r}
library(tidyverse)
library(lubridate)

# Read the dataset
df <- read_csv("2025_02_18_utilization_events.csv")

# Process the data
data_full <- df %>%
  mutate_at(vars(contains("timestamp")), ~as.POSIXct(.x, format = "%Y-%m-%d %H:%M:%S")) %>%
  mutate_at(vars(contains("timestamp")), ~as_date(.x)) %>%
  rename_with(~str_replace(., "timestamp", "date"), contains("timestamp"))

data_full$event_type <- as.factor(data_full$event_type)

levels(data_full$event_type) <- c("emergency", "inpatient", "no_utilization", "observation")

# Create event_table
event_table <- data_full %>%
  group_by(pid, event_type) %>%
  summarize(count = n(), .groups = 'drop') %>%
  pivot_wider(names_from = event_type, values_from = count) %>%
  replace(is.na(.), 0)

# Create cov_table
cov_table <- data_full %>%
  select(pid, coverage_start_date, coverage_end_date, first_reminder_complete_date,
         ibis_coverage_start_date, ibis_coverage_end_date, last_reminder_complete_date) %>%
  distinct()

# Create ibis_yes and ibis_no
ibis_yes <- cov_table %>% filter(!is.na(ibis_coverage_start_date)) %>% mutate(ibis = 1)
ibis_no <- cov_table %>% filter(is.na(ibis_coverage_start_date)) %>% mutate(ibis = 0)
ibis_yesno <- bind_rows(ibis_no, ibis_yes) %>% select(pid, ibis)

# Get inpatient events, date of first
in_first <- data_full %>% select(pid, event_type, event_start_date) %>%
  filter(event_type == "inpatient") %>%
  group_by(pid) %>% summarize(first_admit_date = min(event_start_date), .groups = 'drop')

admit_table <- cov_table %>%
  left_join(in_first, by = "pid") %>%
  left_join(ibis_yesno, by = "pid")

admit_table_times <- admit_table %>%
  mutate(pre_time = first_reminder_complete_date - coverage_start_date) %>%
  mutate(post_time = coverage_end_date - first_reminder_complete_date) %>%
  filter(!is.na(post_time)) %>%  # remove 711 non ibis
  filter(pre_time >= 0)          # remove observations with first_reminder < coverag_start

# First admit post ibis
post_ibis_first_in <- data_full %>% filter(event_start_date > first_reminder_complete_date) %>%
  select(pid, event_type, event_start_date) %>%
  filter(event_type == "inpatient") %>%
  group_by(pid) %>% summarize(first_admit_post_ibis_date = min(event_start_date), .groups = 'drop')

first_admit_post_ibis_table <- cov_table %>%
  left_join(post_ibis_first_in, by = "pid") %>%
  inner_join(ibis_yesno, by = "pid") %>% filter(ibis == 1)

# First admit pre ibis
pre_ibis_first_in <- data_full %>% filter(event_start_date < first_reminder_complete_date) %>%
  select(pid, event_type, event_start_date) %>%
  filter(event_type == "inpatient") %>%
  group_by(pid) %>% summarize(first_admit_pre_ibis_date = min(event_start_date), .groups = 'drop')

first_admit_pre_ibis_table <- cov_table %>%
  left_join(pre_ibis_first_in, by = "pid") %>%
  inner_join(ibis_yesno, by = "pid") %>% filter(ibis == 1)

ibis_pre_post_dates_table <- full_join(first_admit_pre_ibis_table, first_admit_post_ibis_table,
                   by = c("pid", "coverage_start_date", "coverage_end_date",
                                              "first_reminder_complete_date",
                                              "last_reminder_complete_date", "ibis")) %>%
  mutate(pre = case_when(is.na(first_admit_pre_ibis_date) ~
                         first_reminder_complete_date - coverage_start_date,
                         !is.na(first_admit_pre_ibis_date) ~
                         first_admit_pre_ibis_date - coverage_start_date)) %>%
  mutate(post = case_when(is.na(first_admit_post_ibis_date) ~
                          last_reminder_complete_date - first_reminder_complete_date,
                          !is.na(first_admit_post_ibis_date) ~
                          first_admit_post_ibis_date - first_reminder_complete_date)) %>%
  mutate(censor_pre = case_when(is.na(first_admit_pre_ibis_date) ~ 1,
                                !is.na(first_admit_pre_ibis_date) ~ 0)) %>%
  mutate(censor_post = case_when(is.na(first_admit_post_ibis_date) ~ 1,
                                 !is.na(first_admit_post_ibis_date) ~ 0)) %>%
  filter(pre > 0) %>%
  filter(post > 0) %>%
  mutate(pre_time = first_reminder_complete_date - coverage_start_date) %>%
  mutate(post_time = last_reminder_complete_date - first_reminder_complete_date)

# Pivot longer
ibis_pre_post_times_long <- ibis_pre_post_dates_table %>%
  pivot_longer(c(pre, post), names_to = "period", values_to = "time") %>%
  mutate(censor = case_when(period == "pre" ~ censor_pre,
                            period == "post" ~ censor_post)) %>%
  select(pid, period, time, censor)

# summary table
summary_table <- data_full %>%
  group_by(pid) %>%
  summarize(
    total_coverage_days = sum(coverage_duration_days, na.rm = TRUE),
    total_er_visits = sum(event_type == 'emergency', na.rm = TRUE),
    total_admissions = sum(event_type == 'inpatient', na.rm = TRUE),
    .groups = 'drop'
  )

head(summary_table)


```

```{r}
# Sum all the values
total_coverage_days <- sum(summary_table$total_coverage_days)
total_er_visits <- sum(summary_table$total_er_visits)
total_admissions <- sum(summary_table$total_admissions)

totals <- tibble(
  total_coverage_days = total_coverage_days,
  total_er_visits = total_er_visits,
  total_admissions = total_admissions
)

print(totals)
```

```{r}
cov_yrs = total_coverage_days/365
cov_yrs
```

```{r}
thousand_yrs_coverage_days <- sum(summary_table$total_coverage_days) * 2.0864
thousand_yrs_er_visits <- sum(summary_table$total_er_visits) * 2.0864
thousand_yrs_admissions <- sum(summary_table$total_admissions) * 2.0864
hundred_yrs_coverage_days <- thousand_yrs_coverage_days/10
hundred_yrs_er_visits <- thousand_yrs_er_visits/10
hundred_yrs_admissions <- thousand_yrs_admissions/10


thousand_totals <- tibble(
  thousand_yrs_coverage_days = thousand_yrs_coverage_days,
  thousand_yrs_er_visits = thousand_yrs_er_visits,
  thousand_yrs_admissions = thousand_yrs_admissions,
  hundred_yrs_coverage_days = hundred_yrs_coverage_days,
  hundred_yrs_er_visits = hundred_yrs_er_visits,
  hundred_yrs_admissions = hundred_yrs_admissions
)

print(thousand_totals)
```

```{r}
# Different version
# coverage days and days on ibis and pre-ibis
cov_table <- data_full %>%
  select(pid, coverage_start_date, coverage_end_date, first_reminder_complete_date,
         ibis_coverage_start_date, ibis_coverage_end_date, covered_days_on_ibis, covered_days_pre_ibis) %>%
  distinct()

in_first <- data_full %>% select(pid, event_type, event_start_date) %>%
  filter(event_type == "inpatient") %>%
  group_by(pid) %>% summarize(first_admit_date = min(event_start_date), .groups = 'drop')

admit_table <- cov_table %>%
  left_join(in_first, by = "pid") %>%
  mutate(pre_time = first_reminder_complete_date - coverage_start_date) %>%
  mutate(post_time = coverage_end_date - first_reminder_complete_date) %>%
  filter(!is.na(post_time)) %>%
  filter(pre_time >= 0) %>%
  mutate(pre_days = as.numeric(pre_time),
         post_days = as.numeric(post_time))

# pre and post admissions counts
pre_admissions <- data_full %>%
  filter(event_start_date < coverage_start_date, event_type == "inpatient") %>%
  nrow()

post_admissions <- data_full %>%
  filter(event_start_date >= coverage_start_date, event_type == "inpatient") %>%
  nrow()

# pre and post inpatient days
pre_inpatient_days <- data_full %>%
  filter(event_start_date < first_reminder_complete_date, event_type == "inpatient") %>%
  summarise(total_inpatient_days = sum(event_duration_days, na.rm = TRUE)) %>%
  pull(total_inpatient_days)

post_inpatient_days <- data_full %>%
  filter(event_start_date >= first_reminder_complete_date, event_type == "inpatient") %>%
  summarise(total_inpatient_days = sum(event_duration_days, na.rm = TRUE)) %>%
  pull(total_inpatient_days)

pre_total_days <- sum(cov_table$covered_days_pre_ibis, na.rm = TRUE)
post_total_days <- sum(cov_table$covered_days_on_ibis, na.rm = TRUE)

pre_inpatient_days_per_1000_days <- pre_inpatient_days / pre_total_days * 1000
post_inpatient_days_per_1000_days <- post_inpatient_days / post_total_days * 1000

# Display the results
totals <- tibble(
  pre_admissions = pre_admissions,
  post_admissions = post_admissions,
  pre_inpatient_days = pre_inpatient_days,
  post_inpatient_days = post_inpatient_days,
  pre_inpatient_days_per_1000_days = pre_inpatient_days_per_1000_days,
  post_inpatient_days_per_1000_days = post_inpatient_days_per_1000_days
)

print(totals)


```

# sum ibis inpatient

create a table

```{r}

events_full%>% filter(org_name=="Unicare - Study")%>%
  summarize(sum(pre_ibis_inpatient))
events_full%>% filter(org_name=="Unicare - Study")%>%
  summarize(sum(ibis_inpatient))

events_full %>% filter(org_name=="Unicare - Study")%>%
  filter(event_start_date > ibis_coverage_start_date &
           event_start_date < ibis_coverage_end_date) %>%
  summarize(sum(event_type == "inpatient"))

```

```{r}
events_full %>% filter(pre_ibis_inpatient == "1" | event_type == "no_utilization") %>%
  group_by(pid, event_type) %>%
  summarize(count = n()) %>% View()

# do a pivot wider with the 1,2 & 0's into the column with 
events_full %>% filter(pre_ibis_inpatient == "1" | event_type == "no_utilization") %>%
  group_by(pid, event_type) %>%
  summarize(count = n()) %>% pivot_wider(names_from = event_type, values_from = count) %>%
  replace(is.na(.),0)%>% View()

```

```{r}
# final iteration
ibis_inpatient_table <- events_full %>% 
  filter(org_name == "Unicare - Study") %>%
  filter(ibis_inpatient == "1" | event_type == "no_utilization") %>%
  group_by(pid, event_type) %>%
  summarize(count = n()) %>% pivot_wider(names_from = event_type, values_from = count) %>%
  replace(is.na(.),0) %>% rename(ibis_inpatient_count = inpatient)


ibis_inpatient_table %>% ggplot(aes(x = ibis_inpatient_count)) + 
  geom_bar()

```

```{r}
# want another for preibis in patient and then join the two 
pre_ibis_inpatient_table <- events_full %>% 
  filter(org_name == "Unicare - Study") %>%
  filter(pre_ibis_inpatient == "1" | event_type == "no_utilization") %>%
  group_by(pid, event_type) %>%
  summarize(count = n()) %>% pivot_wider(names_from = event_type, values_from = count) %>%
  replace(is.na(.),0) %>% rename(pre_ibis_inpatient_count = inpatient)


pre_ibis_inpatient_table %>% ggplot(aes(x = pre_ibis_inpatient_count)) + 
  geom_bar()

pre_ibis_inpatient_table %>% filter(pid == 10473)

```

```{r}
report_full %>% filter(org_name == "Unicare - Study") %>% 
  select(pid, total_ibis_inpatient) %>% head()

ibis_inpatient_table %>% filter(pid == 10473)

ibis_inpatient_table %>% count(ibis_inpatient_count)
```

```{r}
pre_ibis_inpatient_table %>% full_join(ibis_inpatient_table, by = c("pid", "no_utlization")) %>% View()
```

```{r}
other_table <- events_full %>%
  filter(org_name == "Unicare - Study") %>%
  group_by(pid) %>%
  summarize(other_count = n(), .groups = "drop")

combined_table <- pre_ibis_inpatient_table %>%
  left_join(other_table, by = "pid")

head(combined_table)
combined_table %>% filter(pid == 10473)

```

```{r}
ggplot(combined_table, aes(x = pre_ibis_inpatient_count, y = other_count)) +
  geom_point() +
  labs(x = "Pre-IBIS Inpatient Count",
       y = "Other Count",
       title = "Comparison of Pre-IBIS Inpatient Count and Other Count") +
  theme_minimal()

```

# Bar plot pre-post
